name: Package Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  package:
    name: Create Extension Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="dev-$(date +%Y%m%d-%H%M%S)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Create extension package
        run: |
          # Create a temporary directory for packaging
          mkdir -p extension-package

          # Copy extension files (exclude development files)
          rsync -av --progress . extension-package/ \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            --exclude 'tests' \
            --exclude 'test-results' \
            --exclude 'playwright-report' \
            --exclude '.playwright-mcp' \
            --exclude '.serena' \
            --exclude 'supabase' \
            --exclude 'shared' \
            --exclude 'docs' \
            --exclude 'local-docs' \
            --exclude 'private' \
            --exclude '.idea' \
            --exclude '.env' \
            --exclude '*.log' \
            --exclude 'playwright.config.js' \
            --exclude 'package.json' \
            --exclude 'package-lock.json' \
            --exclude '.gitignore' \
            --exclude 'CLAUDE.md' \
            --exclude '*.zip'

          # Create zip file
          cd extension-package
          zip -r "../add-to-calendar-extension-v${{ steps.get_version.outputs.VERSION }}.zip" .
          cd ..

          # Verify zip contents
          echo "Package contents:"
          unzip -l "add-to-calendar-extension-v${{ steps.get_version.outputs.VERSION }}.zip"

      - name: Upload extension package
        uses: actions/upload-artifact@v3
        with:
          name: extension-package-v${{ steps.get_version.outputs.VERSION }}
          path: add-to-calendar-extension-v${{ steps.get_version.outputs.VERSION }}.zip
          retention-days: 90

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: add-to-calendar-extension-v${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify packaging success
        if: success()
        run: |
          echo "✅ Extension packaged successfully!"
          echo "Version: ${{ steps.get_version.outputs.VERSION }}"
          echo "Ready for Chrome Web Store submission"

      - name: Notify packaging failure
        if: failure()
        run: |
          echo "❌ Extension packaging failed!"
          exit 1
